// Code generated by "enum -type=HTTPStatus"; DO NOT EDIT

package response

import (
	"encoding/json"
	"fmt"
)

var (
	_HTTPStatusValueToString = map[HTTPStatus]string{
		HTTPStatusOK:                          "ok",
		HTTPStatusCreated:                     "created",
		HTTPStatusAccepted:                    "accepted",
		HTTPStatusNonAuthoritativeInformation: "non_authoritative_information",
		HTTPStatusNoContent:                   "no_content",
		HTTPStatusResetContent:                "reset_content",
		HTTPStatusPartialContent:              "partial_content",
		HTTPStatusMovedParmanently:            "moved_parmanently",
		HTTPStatusFound:                       "found",
		HTTPStatusSeeOther:                    "see_other",
		HTTPStatusNotModified:                 "not_modified",
		HTTPStatusUseProxy:                    "use_proxy",
		HTTPStatusBadRequest:                  "bad_request",
		HTTPStatusUnauthorized:                "unauthorized",
		HTTPStatusPaymentRequired:             "payment_required",
		HTTPStatusForbidden:                   "forbidden",
		HTTPStatusNotFound:                    "not_found",
		HTTPStatusMethodNotAllowed:            "method_not_allowed",
		HTTPStatusNotAcceptable:               "not_acceptable",
		HTTPStatusProxyAuthenticationRequired: "proxy_authentication_required",
		HTTPStatusRequestTimeout:              "request_timeout",
		HTTPStatusCoflict:                     "coflict",
		HTTPStatusGone:                        "gone",
		HTTPStatusLengthRequired:              "length_required",
		HTTPStatusPreconditionFailed:          "precondition_failed",
		HTTPStatusPayloadTooLarge:             "payload_too_large",
		HTTPStatusURITooLong:                  "uri_too_long",
		HTTPStatusRangeNotSatisfiable:         "range_not_satisfiable",
		HTTPStatusExpectationFailed:           "expectation_failed",
		HTTPStatusInternalServerError:         "internal_server_error",
		HTTPStatusNotImplemented:              "not_implemented",
		HTTPStatusBadGateway:                  "bad_gateway",
		HTTPStatusServiceUnavailable:          "service_unavailable",
		HTTPStatusGatewayTimeout:              "gateway_timeout",
	}
	_HTTPStatusStringToValue = map[string]HTTPStatus{
		"ok":                            HTTPStatusOK,
		"created":                       HTTPStatusCreated,
		"accepted":                      HTTPStatusAccepted,
		"non_authoritative_information": HTTPStatusNonAuthoritativeInformation,
		"no_content":                    HTTPStatusNoContent,
		"reset_content":                 HTTPStatusResetContent,
		"partial_content":               HTTPStatusPartialContent,
		"moved_parmanently":             HTTPStatusMovedParmanently,
		"found":                         HTTPStatusFound,
		"see_other":                     HTTPStatusSeeOther,
		"not_modified":                  HTTPStatusNotModified,
		"use_proxy":                     HTTPStatusUseProxy,
		"bad_request":                   HTTPStatusBadRequest,
		"unauthorized":                  HTTPStatusUnauthorized,
		"payment_required":              HTTPStatusPaymentRequired,
		"forbidden":                     HTTPStatusForbidden,
		"not_found":                     HTTPStatusNotFound,
		"method_not_allowed":            HTTPStatusMethodNotAllowed,
		"not_acceptable":                HTTPStatusNotAcceptable,
		"proxy_authentication_required": HTTPStatusProxyAuthenticationRequired,
		"request_timeout":               HTTPStatusRequestTimeout,
		"coflict":                       HTTPStatusCoflict,
		"gone":                          HTTPStatusGone,
		"length_required":               HTTPStatusLengthRequired,
		"precondition_failed":           HTTPStatusPreconditionFailed,
		"payload_too_large":             HTTPStatusPayloadTooLarge,
		"uri_too_long":                  HTTPStatusURITooLong,
		"range_not_satisfiable":         HTTPStatusRangeNotSatisfiable,
		"expectation_failed":            HTTPStatusExpectationFailed,
		"internal_server_error":         HTTPStatusInternalServerError,
		"not_implemented":               HTTPStatusNotImplemented,
		"bad_gateway":                   HTTPStatusBadGateway,
		"service_unavailable":           HTTPStatusServiceUnavailable,
		"gateway_timeout":               HTTPStatusGatewayTimeout,
	}
)

func (i HTTPStatus) String() string {
	if str, ok := _HTTPStatusValueToString[i]; ok {
		return str
	}
	return fmt.Sprintf("HTTPStatus(%d)", i)
}

func ParseHTTPStatus(s string) (HTTPStatus, error) {
	if val, ok := _HTTPStatusStringToValue[s]; ok {
		return val, nil
	}
	return HTTPStatus(0), fmt.Errorf("invalid value %q for HTTPStatus", s)
}

func ParseHTTPStatusOr(s string, or HTTPStatus) HTTPStatus {
	val, err := ParseHTTPStatus(s)
	if err != nil {
		return or
	}
	return val
}

func MustParseHTTPStatus(s string) HTTPStatus {
	val, err := ParseHTTPStatus(s)
	if err != nil {
		panic(err)
	}
	return val
}

func (i HTTPStatus) MarshalJSON() ([]byte, error) {
	var s string
	var ok bool
	if s, ok = _HTTPStatusValueToString[i]; !ok {
		s = fmt.Sprintf("HTTPStatus(%d)", i)
	}
	return json.Marshal(s)
}

func (i *HTTPStatus) UnmarshalJSON(b []byte) error {
	if b[0] != '"' || b[len(b)-1] != '"' {
		return fmt.Errorf("invalid JSON string")
	}
	newval, err := ParseHTTPStatus(string(b[1 : len(b)-1]))
	if err != nil {
		return err
	}
	*i = newval
	return nil
}
