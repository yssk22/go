package response

import (
	"html/template"
	"io"

	"context"
)

type _html struct {
	template *template.Template
	data     interface{}
}

func (h *_html) Render(ctx context.Context, w io.Writer) {
	err := h.template.Execute(w, h.data)
	if err != nil {
		panic(err)
	}
}

// NewHTML returns a new *HTML
func NewHTML(ctx context.Context, template *template.Template, data interface{}) *Response {
	return NewHTMLWithStatus(ctx, template, data, HTTPStatusOK)
}

// NewHTMLWithStatus returns a html response generated by template and data with status code
func NewHTMLWithStatus(ctx context.Context, template *template.Template, data interface{}, code HTTPStatus) *Response {
	res := NewResponseWithStatus(ctx, &_html{template: template, data: data}, code)
	res.Header.Set(ContentType, "text/html; charset=utf-8")
	return res
}
