version: 2.0
jobs:
    build:
        docker:
            - image: yssk22/circle-ci:latest
        working_directory: /go/src/github.com/yssk22/go
        environment:
            TEST_RESULTS: /tmp/test-results
            BIN_RESULTS: /tmp/artifacts
            GO111MODULE: 'off'
        steps:
            - checkout
            - run:
                  name: Install Dependencies
                  command: |
                      go get -t ./...
                      go get -u github.com/jstemmer/go-junit-report
            - run:
                  name: Prepare Output Store
                  command: |
                      mkdir -p ${TEST_RESULTS}/go-test ${BIN_RESULTS}
                      echo "" > ${TEST_RESULTS}/go-profile.txt
                      echo "" > ${TEST_RESULTS}/go-test.txt
            - run:
                  name: Unit Tests
                  command: >+
                      for d in $(go list ./... | grep -v vendor);
                      do
                        go test -v -coverprofile=${TEST_RESULTS}/profile.txt -covermode=atomic $d | tee ${TEST_RESULTS}/test.txt;
                        if [ -f ${TEST_RESULTS}/profile.txt ]; then
                          cat ${TEST_RESULTS}/profile.txt >> ${TEST_RESULTS}/go-profile.txt;
                          rm ${TEST_RESULTS}/profile.txt;
                        fi;
                        if [ -f ${TEST_RESULTS}/test.txt ]; then
                          cat ${TEST_RESULTS}/test.txt >> ${TEST_RESULTS}/go-test.txt;
                          rm ${TEST_RESULTS}/test.txt;
                        fi
                      done
            - run:
                  name: Create Reports
                  command: |
                      go-junit-report <${TEST_RESULTS}/go-test.txt > ${TEST_RESULTS}/go-test/results.xml
                      bash <(curl -s https://codecov.io/bash) -f ${TEST_RESULTS}/go-profile.txt
            - store_test_results:
                  path: /tmp/test-results
            - run:
                  name: Update master branch
                  command: |
                      if [ "${CIRCLE_BRANCH}" == "develop" ]; then
                        git config --global user.name "yssk22"
                        git config --global user.email "yssk22@gmail.com"
                        git branch -D master
                        git fetch origin master
                        git checkout master
                        git merge origin/master
                        git merge develop --no-ff -m "Merge 'develop' (CI auto merge)"
                        git push origin master
                      else
                        echo "Not a develop branch"
                      fi
            - run:
                  name: Build Binary
                  command: |
                      for d in $(ls tools/cmd/)
                      do
                        GOOS=linux GOARCH=amd64 go build -o ${BIN_RESULTS}/${d} ./tools/cmd/${d}
                      done
            - store_artifacts:
                  path: /tmp/artifacts
